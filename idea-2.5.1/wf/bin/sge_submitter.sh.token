#!/bin/bash
# This is a shell wrapper script that launches the qsub command
# This command first moves to the specified initial directory 
# before calling qsub

# Get the current working directory to create the redirect files
echo " sge_submitter.sh : Begin.. "
dir=`pwd`

# Set the production cell's SGE variables.
export SGE_ROOT=<SGE_ROOT>
export SGE_CELL=<SGE_CELL>
export SGE_QMASTER_PORT=536
export SGE_EXECD_PORT=537
export SGE_ARCH=`$SGE_ROOT/util/arch`

# Get the first argument, which indicates that this is a marathon
#job if the value is true.
skip_notify_to_qsub=$1

# Get the initial directory by reading the first argument
cwd=$2
cd $cwd

# Shift so that the first 2 arguments are removed
shift 2 

# Invoke the qsub command to submit to the grid
echo " "
echo " sge_submitter.sh : CWD is $cwd"
echo " sge_submitter.sh : Skip Notify Flag $skip_notify_to_qsub"
echo " sge_submitter.sh : SGE_ROOT	is $SGE_ROOT"
echo " sge_submitter.sh : SGE_CELL	is $SGE_CELL"
echo " sge_submitter.sh : SGE_ARCH	is $SGE_ARCH"
echo " sge_submitter.sh : QMASTER PORT	is $SGE_QMASTER_PORT"
echo " sge_submitter.sh : EXECD   PORT	is $SGE_EXECD_PORT"
echo " "
echo " sge_submitter.sh : qsub arguments are :  $*"
echo " "

if [ $skip_notify_to_qsub == true ]; then 
    #echo " qsubbing without notify flag"
    echo "$SGE_ROOT/bin/$SGE_ARCH/qsub -b n -C '#SGE_DIRECTIVE' $* "
    $SGE_ROOT/bin/$SGE_ARCH/qsub -b n -C "#SGE_DIRECTIVE" -notify $* 1>>${dir}/sge_submit.out 2>>${dir}/sge_submit.out
else 
    #echo " qsubbing with notify flag"
    echo "$SGE_ROOT/bin/$SGE_ARCH/qsub -b n -C '#SGE_DIRECTIVE' $*" 
    $SGE_ROOT/bin/$SGE_ARCH/qsub -b n -C "#SGE_DIRECTIVE" -notify $* 1>>${dir}/sge_submit.out 2>>${dir}/sge_submit.out
    #$SGE_ROOT/bin/$SGE_ARCH/qsub -b n -C "#SGE_DIRECTIVE" $* 1>>${dir}/sge_submit.out 2>>${dir}/sge_submit.out
fi
echo " sge_submitter.sh : Exiting.. "
