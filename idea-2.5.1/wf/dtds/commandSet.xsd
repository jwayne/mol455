<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Susan Fields (The Institute for Genomic Research) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="annotation">
		<xs:annotation>
			<xs:documentation>Command Set Schema to be used in the workflow system.
			Copyright 2002, The Institute for Genomic Research (TIGR).
			All rights reserved.
            		</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- Command Status Type, stores the command status information -->
	<xs:complexType name="commandStatusType">
		<xs:sequence>
			<xs:element name="returnValue" type="xs:integer" minOccurs="0"/>
			<xs:element name="message" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Param Type, keeps the information for a parameter for any command or config element -->
	<xs:complexType name="paramType">
		<xs:sequence>
			<xs:element name="key" type="xs:string"/>
			<xs:element name="value" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Config Type, keeps the configuration information for a command set -->
	<xs:complexType name="configType">
		<xs:sequence>
			<xs:element name="filePath" type="xs:string"/>
			<xs:element name="param" type="paramType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Status Type, keeps the status information for a command or command set -->
	<xs:complexType name="commandSetStatusType">
		<xs:sequence>
			<xs:element name="total" type="xs:integer"/>
			<xs:element name="complete" type="xs:integer"/>
			<xs:element name="incomplete" type="xs:integer"/>
			<xs:element name="failed" type="xs:integer"/>
			<xs:element name="errors" type="xs:integer"/>
			<xs:element name="running" type="xs:integer"/>
			<xs:element name="pending" type="xs:integer"/>
			<xs:element name="waiting" type="xs:integer"/>
			<xs:element name="interrupted" type="xs:integer"/>
			<xs:element name="message" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!--Valid list of states for commands and command sets-->
	<xs:simpleType name="listOfStatesType" final="restriction">
		<xs:restriction base="xs:string">
			<xs:enumeration value="incomplete"/>
			<xs:enumeration value="pending"/>
			<xs:enumeration value="successful"/>
			<xs:enumeration value="running"/>
			<xs:enumeration value="waiting"/>
			<xs:enumeration value="completed"/>
			<xs:enumeration value="errors"/>
			<xs:enumeration value="interrupted"/>
			<xs:enumeration value="failed"/>
		</xs:restriction>
	</xs:simpleType>
	<!--Command Type, models a single simple command object-->
	<xs:complexType name="commandType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="comment" type="xs:string"/>
			<xs:element name="id" type="xs:long" minOccurs="0"/>
			<xs:element name="configMapId" type="xs:long" minOccurs="0"/>
			<xs:element name="startTime" type="xs:dateTime"/>
			<xs:element name="endTime" type="xs:dateTime"/>
			<xs:element name="state" type="listOfStatesType"/>
			<xs:element name="waitUntil" type="xs:dateTime"/>
			<xs:element name="type" type="xs:string"/>
			<xs:element name="retryCount" type="xs:integer" minOccurs="0"/>
			<xs:element name="timeOut" type="xs:integer" minOccurs="0"/>
			<xs:element name="status" type="commandStatusType" minOccurs="0"/>
			<xs:element name="param" type="paramType" minOccurs="0"/>
			<xs:element name="flag" type="xs:string" minOccurs="0"/>
			<xs:element name="arg" type="xs:string" minOccurs="0"/>
			<xs:element name="dceSpecification" type="dceSpecification"/>
		</xs:sequence>
	</xs:complexType>
	<!--Command Set Type, models a command set object-->
	<xs:complexType name="commandSetType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="comment" type="xs:string"/>
			<xs:element name="id" type="xs:long" minOccurs="0"/>
			<xs:element name="configMapId" type="xs:long" minOccurs="0"/>
			<xs:element name="fileName" type="xs:string"/>
			<xs:element name="parentFileName" type="xs:string"/>
			<xs:element name="startTime" type="xs:dateTime"/>
			<xs:element name="endTime" type="xs:dateTime"/>
			<xs:element name="state" type="listOfStatesType"/>
			<xs:element name="waitUntil" type="xs:dateTime"/>
			<xs:element name="config" type="configType"/>
			<xs:element name="status" type="commandSetStatusType"/>
			<xs:group ref="commandList" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="type" type="xs:string" use="required"/>
		<xs:attribute name="version" type="xs:string"/>
	</xs:complexType>
	<!--Command List Group, contains one or more commands and command sets-->
	<xs:group name="commandList">
		<xs:choice>
			<xs:element name="command" type="commandType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="commandSet" type="commandSetType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="commandSetRootType">
		<xs:sequence>
			<xs:element name="commandSet" type="commandSetType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="commandSetRoot" type="commandSetRootType"/>
	<xs:complexType name="dceSpecification">
		<xs:sequence>
			<xs:element name="jobID" type="xs:string"/>
			<xs:element name="executionHost" type="xs:string"/>
			<xs:element name="log" type="xs:string"/>
			<xs:element name="specFile" type="xs:string"/>
			<xs:element name="group" type="xs:string"/>
			<xs:element name="mail" type="xs:string"/>
			<xs:element name="os" type="xs:string"/>
			<xs:element name="memory" type="xs:string"/>
			<xs:element name="queue" type="xs:string"/>
			<xs:element name="hosts" type="xs:string"/>
			<xs:element name="duration" type="xs:string"/>
			<xs:element name="priority" type="xs:string"/>
			<xs:element name="passthrough" type="xs:string"/>
			<xs:element name="workingDir" type="xs:string"/>
			<xs:element name="reqStartTime" type="xs:dateTime"/>
			<xs:element name="execEnv" type="execEnvironment"/>
		</xs:sequence>
		<xs:attribute name="type" type="xs:string" use="optional" default="condor"/>
	</xs:complexType>
	<xs:complexType name="execEnvironment">
		<xs:sequence>
			<xs:element name="envFile" type="xs:string"/>
			<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
