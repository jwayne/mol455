#!/usr/local/bin/perl

# You've found IDEA (Interactive Display for Evolutionary Analyses)!
# Please visit the online documentation at http://ideanalyses.sourceforge.net .

# Author:  Amy Egan
# Based on an earlier pipeline by:  Joana Silva

# Copyright (C) 2009, Amy Egan and Joana C. Silva.
# All rights reserved.

$COMMAND_EXECUTED = $0;
@commandExecutedTree = split(/\//, $COMMAND_EXECUTED);
pop(@commandExecutedTree);
$IDEA_DIR = join("/", @commandExecutedTree);
$invocationDir = `pwd`;
chomp($invocationDir);
if ($IDEA_DIR =~ /^(\.\.?)$/){
    $relativePath = $1;
    if ($relativePath eq "."){
	$IDEA_DIR =~ s/$relativePath/$invocationDir/;  # DON'T replace globally!
    }
    elsif ($relativePath eq ".."){ # should be equivalent to "else"
	$parentDir = $invocationDir;
	$parentDir =~ s/\/[^\/]+$//;
	$IDEA_DIR =~ s/$relativePath/$parentDir/;
    }
}

my $path = $ENV{PATH};
my $wf_path = "$IDEA_DIR/wf";

$ENV{WF_ROOT} = $wf_path;
$ENV{WF_ROOT_INSTALL} = $wf_path;
$ENV{WF_TEMPLATE} = "$wf_path/templates";

if (defined $path){
	$path = "$ENV{WF_ROOT}:$ENV{WF_ROOT}/bin:$ENV{WF_ROOT}/add-ons/bin:$path";
}
else {
	$path = "$ENV{WF_ROOT}:$ENV{WF_ROOT}/bin:$ENV{WF_ROOT}/add-ons/bin";
}

$ENV{"PATH"} = ".:$IDEA_DIR:$path";
# end of copied segment

$java = `verify-java`;
chomp($java);
die unless $java;
$desiredClasspath = ".";
foreach $jarsDirectory("$IDEA_DIR/jars", "$IDEA_DIR/wf/jars"){
    opendir(JARS, $jarsDirectory)
	or die "The directory $jarsDirectory could not be opened.\n";
    @jars = readdir(JARS);
    closedir(JARS);
    foreach $jar(@jars){
	if ($jar !~ /\.jar$/){
	    next;
	}
	$desiredClasspath.= ":$jarsDirectory/$jar";
    }
}
$ENV{"CLASSPATH"} = $desiredClasspath;
$ENV{"RUBYLIB"} = "$IDEA_DIR/rubylib";
$phyml = '';
$phylipInstalled = 0;
$maxHeapSize = &findMaxHeapSize;
$maxHeapSize = ($maxHeapSize > 1000) ? 1000 : $maxHeapSize;
if (system("$java -Dlog4j.configuration=log4j.properties -DinvocationDirectory=$invocationDir -DideaDir=$IDEA_DIR/ -DPHYML=$phyml "
	   . ($phylipInstalled ? "-DPHYLIP=true " : "")
	   . "-Dproject.config.file=$ENV{WF_ROOT}/workflow.config -Dwf.root=$ENV{WF_ROOT} -DmaxHeapSize=$maxHeapSize -Xmx${maxHeapSize}m edu/umaryland/igs/idea/IDEAInputGUI")){
    print "There was some error executing IDEA.\n";
}

sub fail{ # This is used as a substitute for die.
    my ($message) = @_;

    print $message;
    exit(1);
}

sub findMaxHeapSize{
    
    my $availableMemory;

    chdir($IDEA_DIR)
	or die "The directory $IDEA_DIR could not be entered.\n";
    $availableMemory = `check-java-memory`;

    chomp($availableMemory);
    unless ($availableMemory){
	&fail("Error running command:  check-java-memory\n");
    }
    chdir($invocationDir)
	or die "The directory $invocationDir could not be entered.\n";
    return $availableMemory;
}
